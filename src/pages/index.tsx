import React, { useState } from 'react';
import { type NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import { Input } from "~/components/Input";
import { SearchDisplay } from "~/components/search/searchDisplay";

const Home: NextPage = () => {
  const fileUpload = api.hebbia.fileUpload.useMutation();
  const [selectedFile, setSelectedFile] = useState<File>();
  const [fileName, setFileName] = useState("");
  const [searchQueryInput, setSearchQueryInput] = useState("")
  const [searchQuery, setSearchQuery] = useState("")

  const { data: searchData, error, isFetching } = api.hebbia.fileSearch.useQuery({query: searchQuery}, {
    enabled: !!searchQuery,
    refetchOnMount: false,
    refetchOnWindowFocus: false,
  })


	const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (!event.target.files || !event.target.files[0]) return;
		const file = event.target.files[0]
    setSelectedFile(file);
    setFileName(file.name);
	};

	const handleFileSubmission = async () => {
    if (!selectedFile) return;

    const base64 = await readFileAsDataURL(selectedFile);

    fileUpload.mutate({
      file: base64 as string,
      uploadedAt: new Date().getTime(),
      fileName,
    })
	};

  const handleSearchSubmit = () => {
    if (!searchQueryInput) return;
    setSearchQuery(searchQueryInput);
  }


  const readFileAsDataURL = async (file: File) => {
    const result_base64 = await new Promise((resolve) => {
        const fileReader = new FileReader();
        fileReader.onload = (e) => resolve(fileReader.result);
        fileReader.readAsDataURL(file);
    });
    return result_base64;
  }

  return (
    <>
      <Head>
        <title>HebbiB.ai</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl flex font-extrabold tracking-tight text-white sm:text-[5rem]">
            HebbiB.<aside className="inline text-[hsl(280,100%,70%)]">AI</aside>
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-1 md:gap-8">
            <div className="text-white flex items-center">
              <input onChange={ changeHandler } type='file'/>
              <button className='p-4 border-solid border-2 border-indigo-600 rounded'
                onClick={ () => {
                void (async () => {
                  await handleFileSubmission()
                })()} }
                >Upload</button>
            </div>
          </div>
          <div className="flex flex-col items-center gap-2 text-white">
            <form
              onSubmit={(e) => {
                e.preventDefault()
                handleSearchSubmit()
              }}
              className='flex flex-col gap-2'>
              <label>Search</label>
              <Input
                type='text'
                value={searchQueryInput}
                onChange={(e) => {
                  setSearchQueryInput(e.target.value);
                }}
              />

            </form>
          </div>
          <div>
            { !!searchData && 
              <SearchDisplay 
                data={ searchData }
              /> 
            }
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
